@model E_Commerce.Models.ViewModels.SizeViewModel

@{
    ViewBag.Title = "AddSize";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var product = Model.product;
    var productsize = Model.productSizes;

    Model.productSizes = new E_Commerce.Models.ProductSize()
    {
        ProductID = Model.product.Product_id
    };
}
<div class="container">
    @using (Html.BeginForm("AddSize", "Admin", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ProductSize</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.product.Product_name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.product.Product_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.product.Product_name, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.product.MainCategory.Category_name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.product.MainCategory.Category_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.product.SizeCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.product.SizeCategory, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                </div>
            </div>

            <div class="form-group" style="display:none">
                @Html.LabelFor(model => model.productSizes.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    <input type="text" value="@Model.product.Product_id" name="ProductID" readonly />
                </div>
            </div>

            <div class="form-group" id="checkbox">

                @Html.LabelFor(model => model.Sizes, "Sizes", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">

                    @foreach (var item in Model.sizelist)
                    {
                        <div class="form-check">
                            <div class="container">
                                <div class="row">
                                    <div class="col-3">
                                        <input type="checkbox" class="form-check-input myclass" name="Sizes" value="@item" id="@item" />
                                        <label class="form-check-label" for="@item">
                                            @item
                                        </label>
                                    </div>
                                    <div class="col-9 @item">
                                    </div>
                                </div>
                            </div>
                        </div>

                    }

                </div>
                
                    <span class="error ml-1" style="color:red; display:none">Please select at-least one Size.</span>
               

            </div>
            @Html.HiddenFor(model => model.productSizes.ProductID)
            @Html.HiddenFor(model => model.productSizes.Count)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add Size" class="btn btn-default" id="btnSubmit" />
                </div>
            </div>
        </div>
    }
</div>


<script>

  $('.myclass').click(function(){
  $(this).prop('checked') ? 
      $(`.${$(this).val()}`).append(`<input type="number" id="${$(this).val()}input"  min="1" max="100" name="Count" required style="display:block;margin:5px" placeholder="count"></input>`) :
  $(`.${$(this).val()} #${$(this).val()}input`).remove();
 });
    $(function () {
        $("#btnSubmit").click(function () {
            var checked_checkboxes = $("#checkbox input[type=checkbox]:checked");
            if (checked_checkboxes.length == 0) {
                $(".error").show();
                return false;
            }
            return true;
        });
    });
</script>
